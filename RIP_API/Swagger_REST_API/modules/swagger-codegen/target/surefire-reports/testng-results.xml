<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="543" passed="543">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="25498" started-at="2016-12-28T11:49:59Z" finished-at="2016-12-28T11:50:24Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="25498" started-at="2016-12-28T11:49:59Z" finished-at="2016-12-28T11:50:24Z">
      <class name="io.swagger.codegen.tizen.TizenClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.tizen.TizenClientOptionsTest@eafc191]" name="checkOptionsHelp" duration-ms="9" started-at="2016-12-28T17:20:23Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.tizen.TizenClientOptionsTest@eafc191]" name="checkOptionsProcessing" duration-ms="197" started-at="2016-12-28T17:20:23Z" finished-at="2016-12-28T17:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.tizen.TizenClientOptionsTest -->
      <class name="io.swagger.codegen.InlineModelResolverTest">
        <test-method status="PASS" signature="notResolveNonModelBodyParameter()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="notResolveNonModelBodyParameter" duration-ms="4" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notResolveNonModelBodyParameter -->
        <test-method status="PASS" signature="resolveInlineArrayBodyParameter()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineArrayBodyParameter" duration-ms="2" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArrayBodyParameter -->
        <test-method status="PASS" signature="resolveInlineArrayModelWithoutTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineArrayModelWithoutTitle" duration-ms="1" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArrayModelWithoutTitle -->
        <test-method status="PASS" signature="resolveInlineArrayModelWithTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineArrayModelWithTitle" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArrayModelWithTitle -->
        <test-method status="PASS" signature="resolveInlineArrayResponseWithTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineArrayResponseWithTitle" duration-ms="1" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArrayResponseWithTitle -->
        <test-method status="PASS" signature="resolveInlineArrayResponse()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineArrayResponse" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArrayResponse -->
        <test-method status="PASS" signature="resolveInlineBodyParameterWithTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineBodyParameterWithTitle" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineBodyParameterWithTitle -->
        <test-method status="PASS" signature="resolveInlineModel2DifferentInnerModelsWIthSameTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineModel2DifferentInnerModelsWIthSameTitle" duration-ms="1" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineModel2DifferentInnerModelsWIthSameTitle -->
        <test-method status="PASS" signature="resolveInlineBodyParameter()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineBodyParameter" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineBodyParameter -->
        <test-method status="PASS" signature="resolveInlineModel2EqualInnerModels()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineModel2EqualInnerModels" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineModel2EqualInnerModels -->
        <test-method status="PASS" signature="testArbitraryObjectBodyParam()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectBodyParam" duration-ms="1" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectBodyParam -->
        <test-method status="PASS" signature="resolveInlineModelTestWithTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineModelTestWithTitle" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineModelTestWithTitle -->
        <test-method status="PASS" signature="resolveInlineModelTestWithoutTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="resolveInlineModelTestWithoutTitle" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineModelTestWithoutTitle -->
        <test-method status="PASS" signature="testArbitraryObjectBodyParamArrayInline()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectBodyParamArrayInline" duration-ms="4" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectBodyParamArrayInline -->
        <test-method status="PASS" signature="testArbitraryObjectBodyParamWithArray()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectBodyParamWithArray" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectBodyParamWithArray -->
        <test-method status="PASS" signature="testArbitraryObjectModelWithArrayInlineWithTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectModelWithArrayInlineWithTitle" duration-ms="1" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectModelWithArrayInlineWithTitle -->
        <test-method status="PASS" signature="testArbitraryObjectBodyParamInline()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectBodyParamInline" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectBodyParamInline -->
        <test-method status="PASS" signature="testArbitraryObjectModelInline()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectModelInline" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectModelInline -->
        <test-method status="PASS" signature="testArbitraryObjectResponseArray()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectResponseArray" duration-ms="1" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectResponseArray -->
        <test-method status="PASS" signature="testArbitraryObjectModelWithArrayInlineWithoutTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectModelWithArrayInlineWithoutTitle" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectModelWithArrayInlineWithoutTitle -->
        <test-method status="PASS" signature="testArbitraryObjectResponse()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectResponse" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectResponse -->
        <test-method status="PASS" signature="testArbitraryObjectResponseMapInline()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectResponseMapInline" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectResponseMapInline -->
        <test-method status="PASS" signature="testArbitraryObjectResponseArrayInline()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArbitraryObjectResponseArrayInline" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArbitraryObjectResponseArrayInline -->
        <test-method status="PASS" signature="testArrayResponse()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testArrayResponse" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayResponse -->
        <test-method status="PASS" signature="testBasicInput()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testBasicInput" duration-ms="7" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasicInput -->
        <test-method status="PASS" signature="testInlineMapResponse()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testInlineMapResponse" duration-ms="1" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineMapResponse -->
        <test-method status="PASS" signature="testInlineMapResponseWithObjectProperty()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testInlineMapResponseWithObjectProperty" duration-ms="1" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineMapResponseWithObjectProperty -->
        <test-method status="PASS" signature="testInlineResponseModelWithTitle()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testInlineResponseModelWithTitle" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineResponseModelWithTitle -->
        <test-method status="PASS" signature="testInlineResponseModel()[pri:0, instance:io.swagger.codegen.InlineModelResolverTest@7a9273a8]" name="testInlineResponseModel" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineResponseModel -->
      </class> <!-- io.swagger.codegen.InlineModelResolverTest -->
      <class name="io.swagger.codegen.scala.ScalaModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.scala.ScalaModelTest@5ed828d]" name="arrayModelTest" duration-ms="10" started-at="2016-12-28T17:20:18Z" description="convert an array model" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.scala.ScalaModelTest@5ed828d]" name="complexListPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:18Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:io.swagger.codegen.scala.ScalaModelTest@5ed828d]" name="complexMapPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:18Z" description="convert a model with complex map Property" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.scala.ScalaModelTest@5ed828d]" name="complexPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:18Z" description="convert a model with complex properties" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.scala.ScalaModelTest@5ed828d]" name="listPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:18Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.scala.ScalaModelTest@5ed828d]" name="mapModelTest" duration-ms="1" started-at="2016-12-28T17:20:18Z" description="convert an map model" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:io.swagger.codegen.scala.ScalaModelTest@5ed828d]" name="mapPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:18Z" description="convert a model with a map Property" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.scala.ScalaModelTest@5ed828d]" name="simpleModelTest" duration-ms="1" started-at="2016-12-28T17:20:18Z" description="convert a simple scala model" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.scala.ScalaModelTest -->
      <class name="io.swagger.codegen.statichtml.StaticHtmlOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.statichtml.StaticHtmlOptionsTest@63440df3]" name="checkOptionsHelp" duration-ms="8" started-at="2016-12-28T17:20:21Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.statichtml.StaticHtmlOptionsTest@63440df3]" name="checkOptionsProcessing" duration-ms="181" started-at="2016-12-28T17:20:21Z" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.statichtml.StaticHtmlOptionsTest -->
      <class name="io.swagger.codegen.jaxrs.JaxRSServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.jaxrs.JaxRSServerOptionsTest@59906517]" name="checkOptionsHelp" duration-ms="5" started-at="2016-12-28T17:20:13Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.jaxrs.JaxRSServerOptionsTest@59906517]" name="checkOptionsProcessing" duration-ms="148" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.jaxrs.JaxRSServerOptionsTest -->
      <class name="io.swagger.codegen.java.JavaModelEnumTest">
        <test-method status="PASS" signature="converterTest()[pri:0, instance:io.swagger.codegen.java.JavaModelEnumTest@1500955a]" name="converterTest" duration-ms="2" started-at="2016-12-28T17:20:13Z" description="convert a java model with an enum" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- converterTest -->
        <test-method status="PASS" signature="overrideEnumTest()[pri:0, instance:io.swagger.codegen.java.JavaModelEnumTest@1500955a]" name="overrideEnumTest" duration-ms="3" started-at="2016-12-28T17:20:13Z" description="not override identical parent enums" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- overrideEnumTest -->
      </class> <!-- io.swagger.codegen.java.JavaModelEnumTest -->
      <class name="io.swagger.codegen.java.JavaInheritanceTest">
        <test-method status="PASS" signature="javaInheritanceTest()[pri:0, instance:io.swagger.codegen.java.JavaInheritanceTest@7ce6a65d]" name="javaInheritanceTest" duration-ms="6" started-at="2016-12-28T17:20:13Z" description="convert a composed model with parent" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javaInheritanceTest -->
        <test-method status="PASS" signature="javaInheritanceWithDiscriminatorTest()[pri:0, instance:io.swagger.codegen.java.JavaInheritanceTest@7ce6a65d]" name="javaInheritanceWithDiscriminatorTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="convert a composed model with discriminator" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javaInheritanceWithDiscriminatorTest -->
      </class> <!-- io.swagger.codegen.java.JavaInheritanceTest -->
      <class name="io.swagger.codegen.android.AndroidClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.android.AndroidClientOptionsTest@1563da5]" name="checkOptionsHelp" duration-ms="8" started-at="2016-12-28T17:20:00Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.android.AndroidClientOptionsTest@1563da5]" name="checkOptionsProcessing" duration-ms="139" started-at="2016-12-28T17:20:00Z" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.android.AndroidClientOptionsTest -->
      <class name="io.swagger.codegen.SwaggerMigratorTest">
        <test-method status="PASS" signature="swaggerMigratorTest()[pri:0, instance:io.swagger.codegen.SwaggerMigratorTest@4d3167f4]" name="swaggerMigratorTest" duration-ms="114" started-at="2016-12-28T17:20:22Z" description="read a 1.2 spec" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- swaggerMigratorTest -->
      </class> <!-- io.swagger.codegen.SwaggerMigratorTest -->
      <class name="io.swagger.codegen.jaxrs.JaxrsJava8ModelTest">
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.jaxrs.JaxrsJava8ModelTest@6043cd28]" name="simpleModelTest" duration-ms="9" started-at="2016-12-28T17:20:13Z" description="convert a simple java model with java8 types" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.jaxrs.JaxrsJava8ModelTest -->
      <class name="io.swagger.codegen.staticDocs.StaticDocOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.staticDocs.StaticDocOptionsTest@a38d7a3]" name="checkOptionsHelp" duration-ms="9" started-at="2016-12-28T17:20:20Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.staticDocs.StaticDocOptionsTest@a38d7a3]" name="checkOptionsProcessing" duration-ms="199" started-at="2016-12-28T17:20:20Z" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.staticDocs.StaticDocOptionsTest -->
      <class name="io.swagger.codegen.ignore.rules.IgnoreLineParserTest">
        <test-method status="PASS" signature="parseComment()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseComment" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseComment -->
        <test-method status="PASS" signature="parseComplex()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseComplex" duration-ms="0" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseComplex -->
        <test-method status="PASS" signature="parseDirectoryMarker()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseDirectoryMarker" duration-ms="0" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseDirectoryMarker -->
        <test-method status="PASS" signature="parseEscapedExclamation()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseEscapedExclamation" duration-ms="0" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseEscapedExclamation -->
        <test-method status="PASS" signature="parseEscapedSpace()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseEscapedSpace" duration-ms="0" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseEscapedSpace -->
        <test-method status="PASS" signature="parseMatchAll()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseMatchAll" duration-ms="2" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseMatchAll -->
        <test-method status="PASS" signature="parseMatchAny()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseMatchAny" duration-ms="0" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseMatchAny -->
        <test-method status="PASS" signature="parseNegate()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseNegate" duration-ms="0" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <exception class="io.swagger.codegen.ignore.rules.ParserException">
            <message>
              <![CDATA[Negation with no negated pattern.]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.swagger.codegen.ignore.rules.ParserException: Negation with no negated pattern.
	at io.swagger.codegen.ignore.rules.IgnoreLineParser.parse(IgnoreLineParser.java:52)
	at io.swagger.codegen.ignore.rules.IgnoreLineParserTest.verifyInputToSingleToken(IgnoreLineParserTest.java:14)
	at io.swagger.codegen.ignore.rules.IgnoreLineParserTest.parseNegate(IgnoreLineParserTest.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- io.swagger.codegen.ignore.rules.ParserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseNegate -->
        <test-method status="PASS" signature="parseRooted()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseRooted" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseRooted -->
        <test-method status="PASS" signature="parseTripleStarPattern()[pri:0, instance:io.swagger.codegen.ignore.rules.IgnoreLineParserTest@38bc8ab5]" name="parseTripleStarPattern" duration-ms="4" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <exception class="io.swagger.codegen.ignore.rules.ParserException">
            <message>
              <![CDATA[The pattern *** is invalid.]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.swagger.codegen.ignore.rules.ParserException: The pattern *** is invalid.
	at io.swagger.codegen.ignore.rules.IgnoreLineParser.parse(IgnoreLineParser.java:74)
	at io.swagger.codegen.ignore.rules.IgnoreLineParserTest.parseTripleStarPattern(IgnoreLineParserTest.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- io.swagger.codegen.ignore.rules.ParserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseTripleStarPattern -->
      </class> <!-- io.swagger.codegen.ignore.rules.IgnoreLineParserTest -->
      <class name="io.swagger.codegen.spring.SpringOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.spring.SpringOptionsTest@1a3869f4]" name="checkOptionsHelp" duration-ms="10" started-at="2016-12-28T17:20:20Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.spring.SpringOptionsTest@1a3869f4]" name="checkOptionsProcessing" duration-ms="277" started-at="2016-12-28T17:20:20Z" finished-at="2016-12-28T17:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.spring.SpringOptionsTest -->
      <class name="io.swagger.codegen.scalatra.ScalatraServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.scalatra.ScalatraServerOptionsTest@50d0686]" name="checkOptionsHelp" duration-ms="7" started-at="2016-12-28T17:20:18Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.scalatra.ScalatraServerOptionsTest@50d0686]" name="checkOptionsProcessing" duration-ms="245" started-at="2016-12-28T17:20:18Z" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.scalatra.ScalatraServerOptionsTest -->
      <class name="io.swagger.codegen.swaggeryaml.SwaggerYamlOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.swaggeryaml.SwaggerYamlOptionsTest@ed9d034]" name="checkOptionsHelp" duration-ms="10" started-at="2016-12-28T17:20:22Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.swaggeryaml.SwaggerYamlOptionsTest@ed9d034]" name="checkOptionsProcessing" duration-ms="189" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.swaggeryaml.SwaggerYamlOptionsTest -->
      <class name="io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest@612679d6]" name="checkOptionsHelp" duration-ms="11" started-at="2016-12-28T17:20:24Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest@612679d6]" name="checkOptionsProcessing" duration-ms="276" started-at="2016-12-28T17:20:24Z" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest -->
      <class name="io.swagger.codegen.swagger.SwaggerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.swagger.SwaggerOptionsTest@76a3e297]" name="checkOptionsHelp" duration-ms="10" started-at="2016-12-28T17:20:21Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.swagger.SwaggerOptionsTest@76a3e297]" name="checkOptionsProcessing" duration-ms="219" started-at="2016-12-28T17:20:21Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.swagger.SwaggerOptionsTest -->
      <class name="io.swagger.codegen.CodegenConfigLoaderTest">
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="11" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AkkaScalaClientCodegen@786cc1df]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="9" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavascriptClientCodegen@1ddb6abb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="7" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SinatraServerCodegen@6f926d01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="9" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ErlangServerCodegen@c67a89]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="10" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.RubyClientCodegen@1e3a2177]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="11" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ClojureClientCodegen@58720eb9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="10" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SpringCodegen@24749ad3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.PythonClientCodegen@1755aee6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="10" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.CSharpClientCodegen@582b14e2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="9" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.GroovyClientCodegen@10e4ce98]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SilexServerCodegen@10466c55]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="6" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.PerlClientCodegen@2a5ed225]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="6" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.NancyFXServerCodegen@2a525f88]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="18" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ScalatraServerCodegen@1cf4d454]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="36" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaJerseyServerCodegen@3ff3275b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="11" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ScalaClientCodegen@63e0057a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.GoClientCodegen@5b76b891]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="7" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SwaggerGenerator@611a91df]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavascriptClosureAngularClientCodegen@47f5ab58]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.StaticDocCodegen@245dbd09]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.FlaskConnexionCodegen@4a013b23]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptAngularClientCodegen@7f20dfd5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="7" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.StaticHtmlGenerator@15651402]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="7" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaCXFServerCodegen@5c194652]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="9" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.DartClientCodegen@1f02b6d1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.NodeJSServerCodegen@66a50c93]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaResteasyServerCodegen@5bddd141]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:02Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.Rails5ServerCodegen@4d6027be]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JMeterCodegen@475eb4fd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.Qt5CPPGenerator@951e911]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="7" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ObjcClientCodegen@3cb376a3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="6" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.FlashClientCodegen@7022fb5c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="6" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AsyncScalaClientCodegen@426940f9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.PhpClientCodegen@447630c4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="6" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AspNet5ServerCodegen@63d75087]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="20" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.StaticHtml2Generator@4c8afba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.LumenServerCodegen@cae4952]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SwaggerYamlGenerator@79aba813]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="7" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptFetchClientCodegen@20a18cc9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.UndertowCodegen@61555218]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="6" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SlimFrameworkServerCodegen@1fcf73b9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TizenClientCodegen@3b80bb63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ConfluenceWikiGenerator@17ebbf1e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="6" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.HaskellServantCodegen@5c65fa69]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="6" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AndroidClientCodegen@38d308e7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="6" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaJAXRSSpecServerCodegen@6b6f73d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="9" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SwiftCodegen@4c6fabba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.GoServerCodegen@3f2ab6ec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptAngular2ClientCodegen@1f1e15de]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaClientCodegen@2ea0161f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="9" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.CsharpDotNet2ClientCodegen@1f235a0a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="8" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.CppRestClientCodegen@75d402d4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="7" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptNodeClientCodegen@1a0b4955]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByFullQualifiedName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByFullQualifiedName" duration-ms="7" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaInflectorServerCodegen@3435a4e5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByFullQualifiedName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AkkaScalaClientCodegen@31434b63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavascriptClientCodegen@64d42d3d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SinatraServerCodegen@24558113]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="6" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ErlangServerCodegen@3d5e0bf0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.RubyClientCodegen@166d576b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ClojureClientCodegen@53153d5e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SpringCodegen@5b407336]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.PythonClientCodegen@160cf225]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="1" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.CSharpClientCodegen@6a262980]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.GroovyClientCodegen@10230657]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="14" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SilexServerCodegen@48a21ea6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.PerlClientCodegen@394e504d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.NancyFXServerCodegen@62ff14cd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ScalatraServerCodegen@6ae6a77b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaJerseyServerCodegen@32e9c3af]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ScalaClientCodegen@796e2187]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.GoClientCodegen@632d1b1b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SwaggerGenerator@3c2fa57a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavascriptClosureAngularClientCodegen@4027edeb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.StaticDocCodegen@48cd8e71]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.FlaskConnexionCodegen@43b3b1b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptAngularClientCodegen@2f6d8c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.StaticHtmlGenerator@7d4135c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaCXFServerCodegen@59db8216]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="1" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.DartClientCodegen@7bb86ac]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.NodeJSServerCodegen@33bf2602]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="1" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaResteasyServerCodegen@4724b2c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.Rails5ServerCodegen@426a4301]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JMeterCodegen@193f3306]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.Qt5CPPGenerator@537a8915]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ObjcClientCodegen@31aa9b01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.FlashClientCodegen@2148b47e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="1" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AsyncScalaClientCodegen@410f1452]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.PhpClientCodegen@463a1f47]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AspNet5ServerCodegen@23ade612]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.StaticHtml2Generator@47224d5d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="6" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.LumenServerCodegen@7e366c6f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SwaggerYamlGenerator@68e094c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptFetchClientCodegen@243162b1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.UndertowCodegen@712c9bcf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SlimFrameworkServerCodegen@3c34c491]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TizenClientCodegen@509e4902]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ConfluenceWikiGenerator@7f958d4a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.HaskellServantCodegen@6af29394]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="1" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AndroidClientCodegen@70f8d217]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaJAXRSSpecServerCodegen@528c4353]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SwiftCodegen@1a06b95]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.GoServerCodegen@7fb02606]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="5" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptAngular2ClientCodegen@49ee3b8d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="2" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaClientCodegen@79486f38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="4" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.CsharpDotNet2ClientCodegen@7b364f47]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="1" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.CppRestClientCodegen@5c8d631]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="3" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptNodeClientCodegen@3d42b756]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
        <test-method status="PASS" signature="testLoadByName(io.swagger.codegen.CodegenConfig)[pri:0, instance:io.swagger.codegen.CodegenConfigLoaderTest@34c4973]" name="testLoadByName" duration-ms="1" started-at="2016-12-28T17:20:03Z" data-provider="codegenConfig" finished-at="2016-12-28T17:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaInflectorServerCodegen@7c93e69]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadByName -->
      </class> <!-- io.swagger.codegen.CodegenConfigLoaderTest -->
      <class name="io.swagger.codegen.config.CodegenConfiguratorTest">
        <test-method status="PASS" signature="testAdditionalProperties()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testAdditionalProperties" duration-ms="613" started-at="2016-12-28T17:20:04Z" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalProperties -->
        <test-method status="PASS" signature="testApiPackage()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testApiPackage" duration-ms="4" started-at="2016-12-28T17:20:04Z" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApiPackage -->
        <test-method status="PASS" signature="testArtifactId()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testArtifactId" duration-ms="4" started-at="2016-12-28T17:20:04Z" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArtifactId -->
        <test-method status="PASS" signature="testArtifactVersion()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testArtifactVersion" duration-ms="3" started-at="2016-12-28T17:20:04Z" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArtifactVersion -->
        <test-method status="PASS" signature="testDynamicProperties()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testDynamicProperties" duration-ms="3" started-at="2016-12-28T17:20:04Z" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDynamicProperties -->
        <test-method status="PASS" signature="testFromFile()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testFromFile" duration-ms="34" started-at="2016-12-28T17:20:04Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromFile -->
        <test-method status="PASS" signature="testGroupId()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testGroupId" duration-ms="5" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupId -->
        <test-method status="PASS" signature="testImportMappings()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testImportMappings" duration-ms="4" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportMappings -->
        <test-method status="PASS" signature="testInstantiationTypes()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testInstantiationTypes" duration-ms="5" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstantiationTypes -->
        <test-method status="PASS" signature="testInvokerPackage()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testInvokerPackage" duration-ms="4" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvokerPackage -->
        <test-method status="PASS" signature="testLanguageSpecificPrimitives()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testLanguageSpecificPrimitives" duration-ms="3" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLanguageSpecificPrimitives -->
        <test-method status="PASS" signature="testLibrary()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testLibrary" duration-ms="3" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLibrary -->
        <test-method status="PASS" signature="testModelPackage()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testModelPackage" duration-ms="3" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelPackage -->
        <test-method status="PASS" signature="testSkipOverwrite()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testSkipOverwrite" duration-ms="7" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkipOverwrite -->
        <test-method status="PASS" signature="testSystemProperties()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testSystemProperties" duration-ms="92" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSystemProperties -->
        <test-method status="PASS" signature="testTemplateDir()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testTemplateDir" duration-ms="10" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTemplateDir -->
        <test-method status="PASS" signature="testTypeMappings()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testTypeMappings" duration-ms="7" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeMappings -->
        <test-method status="PASS" signature="testVerbose()[pri:0, instance:io.swagger.codegen.config.CodegenConfiguratorTest@17d677df]" name="testVerbose" duration-ms="60" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerbose -->
      </class> <!-- io.swagger.codegen.config.CodegenConfiguratorTest -->
      <class name="io.swagger.codegen.javascript.JavaScriptInheritanceTest">
        <test-method status="PASS" signature="javascriptInheritanceTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptInheritanceTest@7113b13f]" name="javascriptInheritanceTest" duration-ms="4" started-at="2016-12-28T17:20:13Z" description="convert a composed model with inheritance enabled" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javascriptInheritanceTest -->
        <test-method status="PASS" signature="javascriptNoInheritanceTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptInheritanceTest@7113b13f]" name="javascriptNoInheritanceTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a composed model with inheritance disabled" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javascriptNoInheritanceTest -->
      </class> <!-- io.swagger.codegen.javascript.JavaScriptInheritanceTest -->
      <class name="io.swagger.codegen.inflector.JavaInflectorServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.inflector.JavaInflectorServerOptionsTest@23d2a7e8]" name="checkOptionsHelp" duration-ms="26" started-at="2016-12-28T17:20:12Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.inflector.JavaInflectorServerOptionsTest@23d2a7e8]" name="checkOptionsProcessing" duration-ms="253" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.inflector.JavaInflectorServerOptionsTest -->
      <class name="io.swagger.codegen.java.JavaClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.java.JavaClientOptionsTest@4abdb505]" name="checkOptionsHelp" duration-ms="5" started-at="2016-12-28T17:20:13Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.java.JavaClientOptionsTest@4abdb505]" name="checkOptionsProcessing" duration-ms="117" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.java.JavaClientOptionsTest -->
      <class name="io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@11758f2a]" name="arrayModelTest" duration-ms="8" started-at="2016-12-28T17:20:24Z" description="convert an array model" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@11758f2a]" name="complexListPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:24Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@11758f2a]" name="complexPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:24Z" description="convert a model with complex Property" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@11758f2a]" name="listPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:24Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@11758f2a]" name="mapModelTest" duration-ms="3" started-at="2016-12-28T17:20:24Z" description="convert a map model" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@11758f2a]" name="simpleModelTest" duration-ms="2" started-at="2016-12-28T17:20:24Z" description="convert a simple TypeScript Angular model" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.typescript.typescriptangular.TypeScriptAngularModelTest -->
      <class name="io.swagger.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest@612fc6eb]" name="checkOptionsHelp" duration-ms="9" started-at="2016-12-28T17:20:23Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest@612fc6eb]" name="checkOptionsProcessing" duration-ms="233" started-at="2016-12-28T17:20:23Z" finished-at="2016-12-28T17:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest -->
      <class name="io.swagger.codegen.jaxrs.JaxrsJodaModelTest">
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.jaxrs.JaxrsJodaModelTest@cb51256]" name="simpleModelTest" duration-ms="4" started-at="2016-12-28T17:20:13Z" description="convert a simple java model with Joda types" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.jaxrs.JaxrsJodaModelTest -->
      <class name="io.swagger.codegen.go.GoModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="arrayModelTest" duration-ms="11" started-at="2016-12-28T17:20:10Z" description="convert an array model" finished-at="2016-12-28T17:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListProperty()[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="complexListProperty" duration-ms="23" started-at="2016-12-28T17:20:10Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListProperty -->
        <test-method status="PASS" signature="complexMapProperty()[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="complexMapProperty" duration-ms="3" started-at="2016-12-28T17:20:10Z" description="convert a model with complex map Property" finished-at="2016-12-28T17:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapProperty -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="complexPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:10Z" description="convert a model with complex Property" finished-at="2016-12-28T17:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="listPropertyTest" duration-ms="16" started-at="2016-12-28T17:20:10Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="mapModelTest" duration-ms="2" started-at="2016-12-28T17:20:10Z" description="convert an map model" finished-at="2016-12-28T17:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="mapPropertyTest" duration-ms="19" started-at="2016-12-28T17:20:10Z" description="convert a model with a map Property" finished-at="2016-12-28T17:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:10Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:10Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample_name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:10Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample__name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="modelNameTest" duration-ms="12" started-at="2016-12-28T17:20:10Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="modelNameTest" duration-ms="1" started-at="2016-12-28T17:20:10Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[\sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:10Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:10Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[_sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.go.GoModelTest@7e2d773b]" name="simpleModelTest" duration-ms="2" started-at="2016-12-28T17:20:10Z" description="convert a simple Go model" finished-at="2016-12-28T17:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.go.GoModelTest -->
      <class name="io.swagger.codegen.swift.SwiftOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.swift.SwiftOptionsTest@4eb7f003]" name="checkOptionsHelp" duration-ms="7" started-at="2016-12-28T17:20:22Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.swift.SwiftOptionsTest@4eb7f003]" name="checkOptionsProcessing" duration-ms="217" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.swift.SwiftOptionsTest -->
      <class name="io.swagger.codegen.ignore.rules.RootedFileRuleTest">
        <test-method status="PASS" signature="testMatchFilenameAndExtension()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testMatchFilenameAndExtension" duration-ms="8" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchFilenameAndExtension -->
        <test-method status="PASS" signature="testMatchFilenameAndExtensionWithExtensionGlob()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testMatchFilenameAndExtensionWithExtensionGlob" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchFilenameAndExtensionWithExtensionGlob -->
        <test-method status="PASS" signature="testMatchFilenameAndExtensionWithFilenameGlob()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testMatchFilenameAndExtensionWithFilenameGlob" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchFilenameAndExtensionWithFilenameGlob -->
        <test-method status="PASS" signature="testMatchFilenameAndExtensionWithMultiplePeriods()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testMatchFilenameAndExtensionWithMultiplePeriods" duration-ms="16" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchFilenameAndExtensionWithMultiplePeriods -->
        <test-method status="PASS" signature="testMatchFilenameOnly()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testMatchFilenameOnly" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchFilenameOnly -->
        <test-method status="PASS" signature="testMatchFilenameWithGlob()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testMatchFilenameWithGlob" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchFilenameWithGlob -->
        <test-method status="PASS" signature="testMatchWithoutLeadingForwardSlash()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testMatchWithoutLeadingForwardSlash" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchWithoutLeadingForwardSlash -->
        <test-method status="PASS" signature="testMatchesOnlyRooted()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testMatchesOnlyRooted" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchesOnlyRooted -->
        <test-method status="PASS" signature="testNonMatchFilenameAndExtension()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testNonMatchFilenameAndExtension" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonMatchFilenameAndExtension -->
        <test-method status="PASS" signature="testNonMatchFilenameAndExtensionWithFilenameGlob()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testNonMatchFilenameAndExtensionWithFilenameGlob" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonMatchFilenameAndExtensionWithFilenameGlob -->
        <test-method status="PASS" signature="testNonMatchFilenameAndExtensionWithMultiplePeriods()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testNonMatchFilenameAndExtensionWithMultiplePeriods" duration-ms="0" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonMatchFilenameAndExtensionWithMultiplePeriods -->
        <test-method status="PASS" signature="testNonMatchFilenameOnly()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testNonMatchFilenameOnly" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonMatchFilenameOnly -->
        <test-method status="PASS" signature="testNonMatchFilenameWithGlob()[pri:0, instance:io.swagger.codegen.ignore.rules.RootedFileRuleTest@687080dc]" name="testNonMatchFilenameWithGlob" duration-ms="0" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonMatchFilenameWithGlob -->
      </class> <!-- io.swagger.codegen.ignore.rules.RootedFileRuleTest -->
      <class name="io.swagger.codegen.go.GoClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.go.GoClientOptionsTest@4d50efb8]" name="checkOptionsHelp" duration-ms="66" started-at="2016-12-28T17:20:09Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.go.GoClientOptionsTest@4d50efb8]" name="checkOptionsProcessing" duration-ms="805" started-at="2016-12-28T17:20:09Z" finished-at="2016-12-28T17:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.go.GoClientOptionsTest -->
      <class name="io.swagger.codegen.DefaultGeneratorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="setUp" is-config="true" duration-ms="5" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGenerateUniqueOperationIds()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="testGenerateUniqueOperationIds" duration-ms="184" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateUniqueOperationIds -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="tearDown" is-config="true" duration-ms="3" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="setUp" is-config="true" duration-ms="3" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSecurityWithGlobal()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="testSecurityWithGlobal" duration-ms="169" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSecurityWithGlobal -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="tearDown" is-config="true" duration-ms="2" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="setUp" is-config="true" duration-ms="3" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSecurityWithoutGlobal()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="testSecurityWithoutGlobal" duration-ms="83" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSecurityWithoutGlobal -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="tearDown" is-config="true" duration-ms="1" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="setUp" is-config="true" duration-ms="2" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSkipOverwrite()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="testSkipOverwrite" duration-ms="2019" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkipOverwrite -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.codegen.DefaultGeneratorTest@69a3d1d]" name="tearDown" is-config="true" duration-ms="140" started-at="2016-12-28T17:20:09Z" finished-at="2016-12-28T17:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- io.swagger.codegen.DefaultGeneratorTest -->
      <class name="io.swagger.codegen.php.PhpClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.php.PhpClientOptionsTest@4923ab24]" name="checkOptionsHelp" duration-ms="15" started-at="2016-12-28T17:20:15Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.php.PhpClientOptionsTest@4923ab24]" name="checkOptionsProcessing" duration-ms="236" started-at="2016-12-28T17:20:15Z" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.php.PhpClientOptionsTest -->
      <class name="io.swagger.codegen.ignore.CodegenIgnoreProcessorTest">
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@1a1d6a08]" name="evaluate" duration-ms="20" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@1a8a8f7c]" name="evaluate" duration-ms="5" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@1d8d30f7]" name="evaluate" duration-ms="14" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@2353b3e6]" name="evaluate" duration-ms="7" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@27808f31]" name="evaluate" duration-ms="14" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@2c039ac6]" name="evaluate" duration-ms="8" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@3234e239]" name="evaluate" duration-ms="10" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@32d2fa64]" name="evaluate" duration-ms="58" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@36b4cef0]" name="evaluate" duration-ms="7" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@37d31475]" name="evaluate" duration-ms="11" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@3d921e20]" name="evaluate" duration-ms="129" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@3e57cd70]" name="evaluate" duration-ms="16" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@42f93a98]" name="evaluate" duration-ms="6" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@436e852b]" name="evaluate" duration-ms="12" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@51e2adc7]" name="evaluate" duration-ms="20" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@587d1d39]" name="evaluate" duration-ms="50" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@58c1670b]" name="evaluate" duration-ms="16" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@5bb21b69]" name="evaluate" duration-ms="10" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@631330c]" name="evaluate" duration-ms="286" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@6b57696f]" name="evaluate" duration-ms="155" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@6f195bc3]" name="evaluate" duration-ms="6" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@7a187f14]" name="evaluate" duration-ms="106" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@9a7504c]" name="evaluate" duration-ms="230" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@c46bcd4]" name="evaluate" duration-ms="19" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@fad74ee]" name="evaluate" duration-ms="46" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:io.swagger.codegen.ignore.CodegenIgnoreProcessorTest@5bb21b69]" name="afterTest" is-config="true" duration-ms="17" started-at="2016-12-28T17:20:24Z" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- io.swagger.codegen.ignore.CodegenIgnoreProcessorTest -->
      <class name="io.swagger.codegen.perl.PerlClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.perl.PerlClientOptionsTest@670b40af]" name="checkOptionsHelp" duration-ms="8" started-at="2016-12-28T17:20:15Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.perl.PerlClientOptionsTest@670b40af]" name="checkOptionsProcessing" duration-ms="235" started-at="2016-12-28T17:20:15Z" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.perl.PerlClientOptionsTest -->
      <class name="io.swagger.codegen.scala.ScalaClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.scala.ScalaClientOptionsTest@371a67ec]" name="checkOptionsHelp" duration-ms="11" started-at="2016-12-28T17:20:18Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.scala.ScalaClientOptionsTest@371a67ec]" name="checkOptionsProcessing" duration-ms="245" started-at="2016-12-28T17:20:18Z" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.scala.ScalaClientOptionsTest -->
      <class name="io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@69b0fd6f]" name="arrayModelTest" duration-ms="577" started-at="2016-12-28T17:20:00Z" description="convert an array model" finished-at="2016-12-28T17:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@69b0fd6f]" name="complexListPropertyTest" duration-ms="46" started-at="2016-12-28T17:20:00Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@69b0fd6f]" name="complexPropertyTest" duration-ms="6" started-at="2016-12-28T17:20:00Z" description="convert a model with complex Property" finished-at="2016-12-28T17:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@69b0fd6f]" name="listPropertyTest" duration-ms="39" started-at="2016-12-28T17:20:00Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@69b0fd6f]" name="mapModelTest" duration-ms="51" started-at="2016-12-28T17:20:00Z" description="convert a map model" finished-at="2016-12-28T17:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@69b0fd6f]" name="simpleModelTest" duration-ms="9" started-at="2016-12-28T17:20:00Z" description="convert a simple TypeScript Node model" finished-at="2016-12-28T17:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeModelTest -->
      <class name="io.swagger.codegen.csharp.CSharpClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.csharp.CSharpClientOptionsTest@3043fe0e]" name="checkOptionsHelp" duration-ms="250" started-at="2016-12-28T17:20:05Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.csharp.CSharpClientOptionsTest@3043fe0e]" name="checkOptionsProcessing" duration-ms="206" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.csharp.CSharpClientOptionsTest -->
      <class name="io.swagger.codegen.CodegenTest">
        <test-method status="PASS" signature="binaryDataTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="binaryDataTest" duration-ms="371" started-at="2016-12-28T17:20:03Z" description="return byte array when response format is byte" finished-at="2016-12-28T17:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- binaryDataTest -->
        <test-method status="PASS" signature="discriminatorTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="discriminatorTest" duration-ms="43" started-at="2016-12-28T17:20:03Z" description="discriminator is present" finished-at="2016-12-28T17:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discriminatorTest -->
        <test-method status="PASS" signature="enumArrayQueryParameterTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="enumArrayQueryParameterTest" duration-ms="147" started-at="2016-12-28T17:20:03Z" description="handle enum array in query parameter test" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumArrayQueryParameterTest -->
        <test-method status="PASS" signature="enumQueryParameterTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="enumQueryParameterTest" duration-ms="45" started-at="2016-12-28T17:20:04Z" description="handle enum in query parameter test" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumQueryParameterTest -->
        <test-method status="PASS" signature="fileUploadParamTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="fileUploadParamTest" duration-ms="49" started-at="2016-12-28T17:20:04Z" description="read a file upload param from a 2.0 spec" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fileUploadParamTest -->
        <test-method status="PASS" signature="formParamTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="formParamTest" duration-ms="56" started-at="2016-12-28T17:20:04Z" description="read formParam values from a 2.0 spec" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formParamTest -->
        <test-method status="PASS" signature="globalConsumesAndProducesTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="globalConsumesAndProducesTest" duration-ms="36" started-at="2016-12-28T17:20:04Z" description="use spec consumes and produces" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalConsumesAndProducesTest -->
        <test-method status="PASS" signature="localConsumesAndProducesTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="localConsumesAndProducesTest" duration-ms="5" started-at="2016-12-28T17:20:04Z" description="use operation consumes and produces" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- localConsumesAndProducesTest -->
        <test-method status="PASS" signature="localResetConsumesAndProducesTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="localResetConsumesAndProducesTest" duration-ms="6" started-at="2016-12-28T17:20:04Z" description="use operation consumes and produces (reset in operation with empty array)" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- localResetConsumesAndProducesTest -->
        <test-method status="PASS" signature="requiredParametersTest()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="requiredParametersTest" duration-ms="8" started-at="2016-12-28T17:20:04Z" description="handle required parameters from a 2.0 spec as required when figuring out Swagger types" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requiredParametersTest -->
        <test-method status="PASS" signature="responseSelectionTest1()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="responseSelectionTest1" duration-ms="13" started-at="2016-12-28T17:20:04Z" description="select main response from a 2.0 spec using the lowest 2XX code" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- responseSelectionTest1 -->
        <test-method status="PASS" signature="responseSelectionTest2()[pri:0, instance:io.swagger.codegen.CodegenTest@76b0bfab]" name="responseSelectionTest2" duration-ms="8" started-at="2016-12-28T17:20:04Z" description="select main response from a 2.0 spec using the default keyword when no 2XX code" finished-at="2016-12-28T17:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- responseSelectionTest2 -->
      </class> <!-- io.swagger.codegen.CodegenTest -->
      <class name="io.swagger.codegen.csharpdotnettwo.CsharpDotNet2ClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.csharpdotnettwo.CsharpDotNet2ClientOptionsTest@bd8db5a]" name="checkOptionsHelp" duration-ms="9" started-at="2016-12-28T17:20:05Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.csharpdotnettwo.CsharpDotNet2ClientOptionsTest@bd8db5a]" name="checkOptionsProcessing" duration-ms="149" started-at="2016-12-28T17:20:05Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.csharpdotnettwo.CsharpDotNet2ClientOptionsTest -->
      <class name="io.swagger.codegen.objc.ObjcModelTest">
        <test-method status="PASS" signature="advancedMapPropertyTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="advancedMapPropertyTest" duration-ms="12" started-at="2016-12-28T17:20:15Z" description="convert a model with a advanced map Property" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- advancedMapPropertyTest -->
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="arrayModelTest" duration-ms="4" started-at="2016-12-28T17:20:15Z" description="convert an array model" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="binaryDataModelTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="binaryDataModelTest" duration-ms="19" started-at="2016-12-28T17:20:15Z" description="test binary data" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- binaryDataModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="complexListPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:15Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="complexMapPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:15Z" description="convert a model with complex map Property" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="complexPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:15Z" description="convert a model with complex Property" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="isArrayModelModelTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="isArrayModelModelTest" duration-ms="81" started-at="2016-12-28T17:20:15Z" description="test isArrayModel" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isArrayModelModelTest -->
        <test-method status="PASS" signature="issue316Test()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="issue316Test" duration-ms="9" started-at="2016-12-28T17:20:15Z" description="create proper imports per #316" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- issue316Test -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="listPropertyTest" duration-ms="3" started-at="2016-12-28T17:20:15Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="mapModelTest" duration-ms="3" started-at="2016-12-28T17:20:15Z" description="convert an map model" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="mapPropertyTest" duration-ms="3" started-at="2016-12-28T17:20:15Z" description="convert a model with a map Property" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="mixedPropertiesDataModelTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="mixedPropertiesDataModelTest" duration-ms="76" started-at="2016-12-28T17:20:15Z" description="test mixedProperties" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mixedPropertiesDataModelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="simpleModelTest" duration-ms="2" started-at="2016-12-28T17:20:15Z" description="convert a simple java model" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="udidAndPasswordDataModelTest()[pri:0, instance:io.swagger.codegen.objc.ObjcModelTest@27f723]" name="udidAndPasswordDataModelTest" duration-ms="66" started-at="2016-12-28T17:20:15Z" description="test udid" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udidAndPasswordDataModelTest -->
      </class> <!-- io.swagger.codegen.objc.ObjcModelTest -->
      <class name="io.swagger.codegen.languages.ClojureClientCodegenTest">
        <test-method status="PASS" signature="testSanitizeTag()[pri:0, instance:io.swagger.codegen.languages.ClojureClientCodegenTest@25af5db5]" name="testSanitizeTag" duration-ms="1" started-at="2016-12-28T17:20:14Z" finished-at="2016-12-28T17:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSanitizeTag -->
        <test-method status="PASS" signature="testToApiName()[pri:0, instance:io.swagger.codegen.languages.ClojureClientCodegenTest@25af5db5]" name="testToApiName" duration-ms="1" started-at="2016-12-28T17:20:14Z" finished-at="2016-12-28T17:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToApiName -->
        <test-method status="PASS" signature="testToApiFilename()[pri:0, instance:io.swagger.codegen.languages.ClojureClientCodegenTest@25af5db5]" name="testToApiFilename" duration-ms="0" started-at="2016-12-28T17:20:14Z" finished-at="2016-12-28T17:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToApiFilename -->
      </class> <!-- io.swagger.codegen.languages.ClojureClientCodegenTest -->
      <class name="io.swagger.codegen.java.AbstractJavaCodegenTest">
        <test-method status="PASS" signature="toEnumVarNameShouldNotShortenUnderScore()[pri:0, instance:io.swagger.codegen.java.AbstractJavaCodegenTest@26a7b76d]" name="toEnumVarNameShouldNotShortenUnderScore" duration-ms="0" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toEnumVarNameShouldNotShortenUnderScore -->
      </class> <!-- io.swagger.codegen.java.AbstractJavaCodegenTest -->
      <class name="io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ClientOptionsTest@491cc5c9]" name="checkOptionsHelp" duration-ms="48" started-at="2016-12-28T17:19:59Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:19:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ClientOptionsTest@491cc5c9]" name="checkOptionsProcessing" duration-ms="208" started-at="2016-12-28T17:19:59Z" finished-at="2016-12-28T17:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ClientOptionsTest -->
      <class name="io.swagger.codegen.haskellservant.HaskellTest">
        <test-method status="PASS" signature="modelTest()[pri:0, instance:io.swagger.codegen.haskellservant.HaskellTest@307f6b8c]" name="modelTest" duration-ms="1" started-at="2016-12-28T17:20:11Z" description="convert a haskell model with dots" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelTest -->
      </class> <!-- io.swagger.codegen.haskellservant.HaskellTest -->
      <class name="io.swagger.codegen.haskellservant.HaskellServantOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.haskellservant.HaskellServantOptionsTest@2173f6d9]" name="checkOptionsHelp" duration-ms="65" started-at="2016-12-28T17:20:10Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.haskellservant.HaskellServantOptionsTest@2173f6d9]" name="checkOptionsProcessing" duration-ms="250" started-at="2016-12-28T17:20:11Z" finished-at="2016-12-28T17:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.haskellservant.HaskellServantOptionsTest -->
      <class name="io.swagger.codegen.staticDocs.StaticOperationTest">
        <test-method status="PASS" signature="complexParameterTest()[pri:0, instance:io.swagger.codegen.staticDocs.StaticOperationTest@77f99a05]" name="complexParameterTest" duration-ms="5" started-at="2016-12-28T17:20:21Z" description="convert a complex parameter" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexParameterTest -->
        <test-method status="PASS" signature="listParameterTest()[pri:0, instance:io.swagger.codegen.staticDocs.StaticOperationTest@77f99a05]" name="listParameterTest" duration-ms="1" started-at="2016-12-28T17:20:21Z" description="convert a complex list parameter" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listParameterTest -->
        <test-method status="PASS" signature="stringParameterTest()[pri:0, instance:io.swagger.codegen.staticDocs.StaticOperationTest@77f99a05]" name="stringParameterTest" duration-ms="1" started-at="2016-12-28T17:20:21Z" description="convert a string parameter" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringParameterTest -->
      </class> <!-- io.swagger.codegen.staticDocs.StaticOperationTest -->
      <class name="io.swagger.codegen.ClientAuthInputTest">
        <test-method status="PASS" signature="clientAuthInputTest()[pri:0, instance:io.swagger.codegen.ClientAuthInputTest@33c7e1bb]" name="clientAuthInputTest" duration-ms="7" started-at="2016-12-28T17:20:02Z" description="read a file upload param from a 2.0 spec" finished-at="2016-12-28T17:20:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clientAuthInputTest -->
      </class> <!-- io.swagger.codegen.ClientAuthInputTest -->
      <class name="io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ModelTest@74ad1f1f]" name="arrayModelTest" duration-ms="25" started-at="2016-12-28T17:20:01Z" description="convert an array model" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ModelTest@74ad1f1f]" name="complexListPropertyTest" duration-ms="5" started-at="2016-12-28T17:20:01Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ModelTest@74ad1f1f]" name="complexPropertyTest" duration-ms="4" started-at="2016-12-28T17:20:01Z" description="convert a model with complex Property" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ModelTest@74ad1f1f]" name="listPropertyTest" duration-ms="5" started-at="2016-12-28T17:20:01Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ModelTest@74ad1f1f]" name="mapModelTest" duration-ms="2" started-at="2016-12-28T17:20:01Z" description="convert a map model" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ModelTest@74ad1f1f]" name="simpleModelTest" duration-ms="4" started-at="2016-12-28T17:20:01Z" description="convert a simple TypeScript Angular2 model" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.typescript.typescriptangular2.TypeScriptAngular2ModelTest -->
      <class name="io.swagger.codegen.csharp.CSharpModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="arrayModelTest" duration-ms="9" started-at="2016-12-28T17:20:05Z" description="convert an array model" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="arrayPropertyCollectionOptionTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="arrayPropertyCollectionOptionTest" duration-ms="6" started-at="2016-12-28T17:20:05Z" description="convert a model with array Property to Collection&lt;T&gt;" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPropertyCollectionOptionTest -->
        <test-method status="PASS" signature="arrayPropertyICollectionOptionTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="arrayPropertyICollectionOptionTest" duration-ms="3" started-at="2016-12-28T17:20:05Z" description="convert a model with array Property to Collection&lt;T&gt;" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPropertyICollectionOptionTest -->
        <test-method status="PASS" signature="arrayPropertyTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="arrayPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:05Z" description="convert a model with array Property to default List&lt;T&gt;" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPropertyTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="complexListPropertyTest" duration-ms="3" started-at="2016-12-28T17:20:05Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="complexMapPropertyTest" duration-ms="3" started-at="2016-12-28T17:20:05Z" description="convert a model with complex map Property" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="complexPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:05Z" description="convert a model with complex Property" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="listPropertyTest" duration-ms="3" started-at="2016-12-28T17:20:05Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="mapModelTest" duration-ms="2" started-at="2016-12-28T17:20:05Z" description="convert an map model" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="mapPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:05Z" description="convert a model with a map Property" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.csharp.CSharpModelTest@78e67e0a]" name="simpleModelTest" duration-ms="2" started-at="2016-12-28T17:20:05Z" description="convert a simple model" finished-at="2016-12-28T17:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.csharp.CSharpModelTest -->
      <class name="io.swagger.codegen.swift.SwiftCodegenTest">
        <test-method status="PASS" signature="binaryDataTest()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="binaryDataTest" duration-ms="21" started-at="2016-12-28T17:20:22Z" description="returns NSData when response format is binary" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- binaryDataTest -->
        <test-method status="PASS" signature="shouldNotBreakCorrectName()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="shouldNotBreakCorrectName" duration-ms="1" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotBreakCorrectName -->
        <test-method status="PASS" signature="testCapitalsWithDash()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="testCapitalsWithDash" duration-ms="2" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCapitalsWithDash -->
        <test-method status="PASS" signature="testCapitalsWithUnderscore()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="testCapitalsWithUnderscore" duration-ms="0" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCapitalsWithUnderscore -->
        <test-method status="PASS" signature="testDefaultPodAuthors()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="testDefaultPodAuthors" duration-ms="1" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultPodAuthors -->
        <test-method status="PASS" signature="testCapitalsWithSpace()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="testCapitalsWithSpace" duration-ms="0" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCapitalsWithSpace -->
        <test-method status="PASS" signature="testPodAuthors()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="testPodAuthors" duration-ms="1" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPodAuthors -->
        <test-method status="PASS" signature="testLowercaseWithUnderscore()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="testLowercaseWithUnderscore" duration-ms="0" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLowercaseWithUnderscore -->
        <test-method status="PASS" signature="testSingleWordLowercase()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="testSingleWordLowercase" duration-ms="0" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleWordLowercase -->
        <test-method status="PASS" signature="testSingleWordAllCaps()[pri:0, instance:io.swagger.codegen.swift.SwiftCodegenTest@6121c9d6]" name="testSingleWordAllCaps" duration-ms="0" started-at="2016-12-28T17:20:22Z" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleWordAllCaps -->
      </class> <!-- io.swagger.codegen.swift.SwiftCodegenTest -->
      <class name="io.swagger.codegen.python.PythonClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.python.PythonClientOptionsTest@7b69c6ba]" name="checkOptionsHelp" duration-ms="11" started-at="2016-12-28T17:20:16Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.python.PythonClientOptionsTest@7b69c6ba]" name="checkOptionsProcessing" duration-ms="205" started-at="2016-12-28T17:20:16Z" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.python.PythonClientOptionsTest -->
      <class name="io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest@1060b431]" name="arrayModelTest" duration-ms="9" started-at="2016-12-28T17:20:23Z" description="convert an array model" finished-at="2016-12-28T17:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest@1060b431]" name="complexListPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:23Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest@1060b431]" name="complexPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:23Z" description="convert a model with complex Property" finished-at="2016-12-28T17:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="enumArrayMdoelTest()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest@1060b431]" name="enumArrayMdoelTest" duration-ms="105" started-at="2016-12-28T17:20:23Z" description="test enum array model" finished-at="2016-12-28T17:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumArrayMdoelTest -->
        <test-method status="PASS" signature="enumMdoelValueTest()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest@1060b431]" name="enumMdoelValueTest" duration-ms="55" started-at="2016-12-28T17:20:23Z" description="test enum model for values (numeric, string, etc)" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumMdoelValueTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest@1060b431]" name="listPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:24Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest@1060b431]" name="mapModelTest" duration-ms="2" started-at="2016-12-28T17:20:24Z" description="convert a map model" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest@1060b431]" name="simpleModelTest" duration-ms="2" started-at="2016-12-28T17:20:24Z" description="convert a simple TypeScript Angular model" finished-at="2016-12-28T17:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.typescript.fetch.TypeScriptFetchModelTest -->
      <class name="io.swagger.codegen.javascript.JavaScriptModelEnumTest">
        <test-method status="PASS" signature="converterTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelEnumTest@45820e51]" name="converterTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a JavaScript model with an enum" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- converterTest -->
        <test-method status="PASS" signature="enumArrayMdoelTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelEnumTest@45820e51]" name="enumArrayMdoelTest" duration-ms="105" started-at="2016-12-28T17:20:13Z" description="test enum array model" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumArrayMdoelTest -->
        <test-method status="PASS" signature="enumMdoelValueTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelEnumTest@45820e51]" name="enumMdoelValueTest" duration-ms="36" started-at="2016-12-28T17:20:13Z" description="test enum model for values (numeric, string, etc)" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumMdoelValueTest -->
        <test-method status="PASS" signature="overrideEnumTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelEnumTest@45820e51]" name="overrideEnumTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="not override identical parent enums" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- overrideEnumTest -->
      </class> <!-- io.swagger.codegen.javascript.JavaScriptModelEnumTest -->
      <class name="io.swagger.codegen.akkascala.AkkaScalaClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.akkascala.AkkaScalaClientOptionsTest@6ee52dcd]" name="checkOptionsHelp" duration-ms="190" started-at="2016-12-28T17:19:59Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:19:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.akkascala.AkkaScalaClientOptionsTest@6ee52dcd]" name="checkOptionsProcessing" duration-ms="440" started-at="2016-12-28T17:19:59Z" finished-at="2016-12-28T17:19:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.akkascala.AkkaScalaClientOptionsTest -->
      <class name="io.swagger.codegen.php.PhpModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="arrayModelTest" duration-ms="8" started-at="2016-12-28T17:20:16Z" description="convert an array model" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListProperty()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="complexListProperty" duration-ms="2" started-at="2016-12-28T17:20:16Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListProperty -->
        <test-method status="PASS" signature="complexMapProperty()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="complexMapProperty" duration-ms="1" started-at="2016-12-28T17:20:16Z" description="convert a model with complex map Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapProperty -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="complexPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:16Z" description="convert a model with complex Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="enumArrayMdoelTest()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="enumArrayMdoelTest" duration-ms="61" started-at="2016-12-28T17:20:16Z" description="test enum array model" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumArrayMdoelTest -->
        <test-method status="PASS" signature="enumMdoelValueTest()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="enumMdoelValueTest" duration-ms="52" started-at="2016-12-28T17:20:16Z" description="test enum model for values (numeric, string, etc)" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumMdoelValueTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="listPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:16Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="mapModelTest" duration-ms="2" started-at="2016-12-28T17:20:16Z" description="convert an map model" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="mapPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:16Z" description="convert a model with a map Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:16Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:16Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample_name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:16Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample__name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:16Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:16Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[\sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[\Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="modelNameTest" duration-ms="1" started-at="2016-12-28T17:20:16Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[_sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:16Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.php.PhpModelTest@44c8afef]" name="simpleModelTest" duration-ms="3" started-at="2016-12-28T17:20:16Z" description="convert a simple php model" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.php.PhpModelTest -->
      <class name="io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest@6a1aab78]" name="checkOptionsHelp" duration-ms="6" started-at="2016-12-28T17:20:01Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest@6a1aab78]" name="checkOptionsProcessing" duration-ms="153" started-at="2016-12-28T17:20:01Z" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest -->
      <class name="io.swagger.codegen.javascript.JavaScriptClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptClientOptionsTest@60285225]" name="checkOptionsHelp" duration-ms="4" started-at="2016-12-28T17:20:13Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptClientOptionsTest@60285225]" name="checkOptionsProcessing" duration-ms="97" started-at="2016-12-28T17:20:13Z" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.javascript.JavaScriptClientOptionsTest -->
      <class name="io.swagger.codegen.objc.ObjcClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.objc.ObjcClientOptionsTest@5f3a4b84]" name="checkOptionsHelp" duration-ms="16" started-at="2016-12-28T17:20:14Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.objc.ObjcClientOptionsTest@5f3a4b84]" name="checkOptionsProcessing" duration-ms="219" started-at="2016-12-28T17:20:14Z" finished-at="2016-12-28T17:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.objc.ObjcClientOptionsTest -->
      <class name="io.swagger.codegen.dart.DartClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.dart.DartClientOptionsTest@2f943d71]" name="checkOptionsHelp" duration-ms="10" started-at="2016-12-28T17:20:06Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.dart.DartClientOptionsTest@2f943d71]" name="checkOptionsProcessing" duration-ms="162" started-at="2016-12-28T17:20:06Z" finished-at="2016-12-28T17:20:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.dart.DartClientOptionsTest -->
      <class name="io.swagger.codegen.swift.SwiftModelTest">
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.swift.SwiftModelTest@87f383f]" name="simpleModelTest" duration-ms="3" started-at="2016-12-28T17:20:22Z" description="convert a simple java model" finished-at="2016-12-28T17:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.swift.SwiftModelTest -->
      <class name="io.swagger.codegen.sinatra.SinatraServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.sinatra.SinatraServerOptionsTest@1e7c7811]" name="checkOptionsHelp" duration-ms="9" started-at="2016-12-28T17:20:19Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.sinatra.SinatraServerOptionsTest@1e7c7811]" name="checkOptionsProcessing" duration-ms="209" started-at="2016-12-28T17:20:19Z" finished-at="2016-12-28T17:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.sinatra.SinatraServerOptionsTest -->
      <class name="io.swagger.codegen.ExampleGeneratorTest">
        <test-method status="PASS" signature="recursiveModelsTest()[pri:0, instance:io.swagger.codegen.ExampleGeneratorTest@3dfc5fb8]" name="recursiveModelsTest" duration-ms="6" started-at="2016-12-28T17:20:09Z" description="check handling of recursive models" finished-at="2016-12-28T17:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recursiveModelsTest -->
      </class> <!-- io.swagger.codegen.ExampleGeneratorTest -->
      <class name="io.swagger.codegen.flash.FlashClienOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.flash.FlashClienOptionsTest@467aecef]" name="checkOptionsHelp" duration-ms="16" started-at="2016-12-28T17:20:09Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.flash.FlashClienOptionsTest@467aecef]" name="checkOptionsProcessing" duration-ms="277" started-at="2016-12-28T17:20:09Z" finished-at="2016-12-28T17:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.flash.FlashClienOptionsTest -->
      <class name="io.swagger.codegen.python.PythonTest">
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.python.PythonTest@46daef40]" name="complexListPropertyTest" duration-ms="7" started-at="2016-12-28T17:20:16Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:io.swagger.codegen.python.PythonTest@46daef40]" name="complexMapPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:16Z" description="convert a model with complex map Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:io.swagger.codegen.python.PythonTest@46daef40]" name="complexPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:16Z" description="convert a model with complex Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.python.PythonTest@46daef40]" name="listPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:16Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:io.swagger.codegen.python.PythonTest@46daef40]" name="mapPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:16Z" description="convert a model with a map Property" finished-at="2016-12-28T17:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="modelTest()[pri:0, instance:io.swagger.codegen.python.PythonTest@46daef40]" name="modelTest" duration-ms="394" started-at="2016-12-28T17:20:16Z" description="convert a python model with dots" finished-at="2016-12-28T17:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.python.PythonTest@46daef40]" name="simpleModelTest" duration-ms="2" started-at="2016-12-28T17:20:17Z" description="convert a simple java model" finished-at="2016-12-28T17:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- io.swagger.codegen.python.PythonTest -->
      <class name="io.swagger.codegen.languages.BooleanOptionsTest">
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="1" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AkkaScalaClientCodegen@7e017f47]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavascriptClientCodegen@6166aac5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="1" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.RubyClientCodegen@68cb8e52]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SinatraServerCodegen@7e36d508]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ErlangServerCodegen@1d4531fa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ClojureClientCodegen@3c2f310c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SpringCodegen@74f92d14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.GroovyClientCodegen@31e84f10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.CSharpClientCodegen@748aa7dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.PythonClientCodegen@40071890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SilexServerCodegen@c4455b4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.NancyFXServerCodegen@556ae220]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.PerlClientCodegen@747f0f34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ScalaClientCodegen@4440750]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ScalatraServerCodegen@2689b752]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaJerseyServerCodegen@84eafc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.GoClientCodegen@63d9e1a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaCXFServerCodegen@6c537267]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.StaticDocCodegen@3472f3ab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.StaticHtmlGenerator@4f1f2f84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavascriptClosureAngularClientCodegen@10280879]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptAngularClientCodegen@1f2497d9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SwaggerGenerator@6d658aa8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.FlaskConnexionCodegen@5e557671]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="1" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.FlashClientCodegen@1d9bd4d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.Rails5ServerCodegen@638341b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaResteasyServerCodegen@14b4d90b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JMeterCodegen@7962c1d5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.DartClientCodegen@19c06762]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.Qt5CPPGenerator@56226064]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.NodeJSServerCodegen@22e1a1dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ObjcClientCodegen@646c872a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.LumenServerCodegen@406decb2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.StaticHtml2Generator@74d776fb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SwaggerYamlGenerator@122ea8dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AsyncScalaClientCodegen@7298c2d9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptFetchClientCodegen@6cb417fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.PhpClientCodegen@377cbdae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AspNet5ServerCodegen@37a939bc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TizenClientCodegen@6b338591]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="1" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaJAXRSSpecServerCodegen@44aa5585]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.UndertowCodegen@239bc43f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SlimFrameworkServerCodegen@c3ca482]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.HaskellServantCodegen@5ab3f611]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.AndroidClientCodegen@33425171]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.ConfluenceWikiGenerator@277474fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="1" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaInflectorServerCodegen@51a69e8f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptAngular2ClientCodegen@24536f07]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.JavaClientCodegen@32430075]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.GoServerCodegen@53b7f08]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.CsharpDotNet2ClientCodegen@1a45e29f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.SwiftCodegen@40fd1a78]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.TypeScriptNodeClientCodegen@7b4c793b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
        <test-method status="PASS" signature="booleanOptionsTest(io.swagger.codegen.DefaultCodegen)[pri:0, instance:io.swagger.codegen.languages.BooleanOptionsTest@5bfbf16f]" name="booleanOptionsTest" duration-ms="0" started-at="2016-12-28T17:20:14Z" data-provider="Codegen" finished-at="2016-12-28T17:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.swagger.codegen.languages.CppRestClientCodegen@44580de0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanOptionsTest -->
      </class> <!-- io.swagger.codegen.languages.BooleanOptionsTest -->
      <class name="io.swagger.codegen.qtfivecpp.Qt5CPPOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.qtfivecpp.Qt5CPPOptionsTest@12f41634]" name="checkOptionsHelp" duration-ms="8" started-at="2016-12-28T17:20:17Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.qtfivecpp.Qt5CPPOptionsTest@12f41634]" name="checkOptionsProcessing" duration-ms="203" started-at="2016-12-28T17:20:17Z" finished-at="2016-12-28T17:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.qtfivecpp.Qt5CPPOptionsTest -->
      <class name="io.swagger.codegen.ruby.RubyClientCodegenTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.codegen.ruby.RubyClientCodegenTest@13c27452]" name="setUp" is-config="true" duration-ms="5" started-at="2016-12-28T17:20:17Z" finished-at="2016-12-28T17:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGenerateRubyClientWithHtmlEntity()[pri:0, instance:io.swagger.codegen.ruby.RubyClientCodegenTest@13c27452]" name="testGenerateRubyClientWithHtmlEntity" duration-ms="149" started-at="2016-12-28T17:20:17Z" finished-at="2016-12-28T17:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateRubyClientWithHtmlEntity -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.codegen.ruby.RubyClientCodegenTest@13c27452]" name="tearDown" is-config="true" duration-ms="30" started-at="2016-12-28T17:20:17Z" finished-at="2016-12-28T17:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- io.swagger.codegen.ruby.RubyClientCodegenTest -->
      <class name="io.swagger.codegen.statichtml.StaticHtmlTagsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.codegen.statichtml.StaticHtmlTagsTest@3aeaafa6]" name="setUp" is-config="true" duration-ms="6" started-at="2016-12-28T17:20:21Z" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testApiTags()[pri:0, instance:io.swagger.codegen.statichtml.StaticHtmlTagsTest@3aeaafa6]" name="testApiTags" duration-ms="104" started-at="2016-12-28T17:20:21Z" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApiTags -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.codegen.statichtml.StaticHtmlTagsTest@3aeaafa6]" name="tearDown" is-config="true" duration-ms="7" started-at="2016-12-28T17:20:21Z" finished-at="2016-12-28T17:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- io.swagger.codegen.statichtml.StaticHtmlTagsTest -->
      <class name="io.swagger.codegen.silex.SilexServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.silex.SilexServerOptionsTest@7a3d45bd]" name="checkOptionsHelp" duration-ms="10" started-at="2016-12-28T17:20:19Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.silex.SilexServerOptionsTest@7a3d45bd]" name="checkOptionsProcessing" duration-ms="204" started-at="2016-12-28T17:20:19Z" finished-at="2016-12-28T17:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.silex.SilexServerOptionsTest -->
      <class name="io.swagger.codegen.nodejs.NodeJSServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.nodejs.NodeJSServerOptionsTest@5bcea91b]" name="checkOptionsHelp" duration-ms="5" started-at="2016-12-28T17:20:14Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.nodejs.NodeJSServerOptionsTest@5bcea91b]" name="checkOptionsProcessing" duration-ms="101" started-at="2016-12-28T17:20:14Z" finished-at="2016-12-28T17:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.nodejs.NodeJSServerOptionsTest -->
      <class name="io.swagger.codegen.ruby.RubyClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.ruby.RubyClientOptionsTest@262b2c86]" name="checkOptionsHelp" duration-ms="13" started-at="2016-12-28T17:20:17Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.ruby.RubyClientOptionsTest@262b2c86]" name="checkOptionsProcessing" duration-ms="259" started-at="2016-12-28T17:20:17Z" finished-at="2016-12-28T17:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.ruby.RubyClientOptionsTest -->
      <class name="io.swagger.codegen.java.JavaModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="arrayModelTest" duration-ms="2" started-at="2016-12-28T17:20:13Z" description="convert an array model" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="binaryDataTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="binaryDataTest" duration-ms="4" started-at="2016-12-28T17:20:13Z" description="convert a model with binary data" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- binaryDataTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="complexListPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="complexMapPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with complex map Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertiesTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="complexPropertiesTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with complex properties" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertiesTest -->
        <test-method status="PASS" signature="convertParameterTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="convertParameterTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="convert a parameter" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertParameterTest -->
        <test-method status="PASS" signature="escapeNamesTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="escapeNamesTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="properly escape names per 567" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- escapeNamesTest -->
        <test-method status="PASS" signature="invalidParamNameTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="invalidParamNameTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="translate an invalid param name" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidParamNameTest -->
        <test-method status="PASS" signature="hyphensTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="hyphensTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="convert hyphens per issue 503" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hyphensTest -->
        <test-method status="PASS" signature="list2DPropertyTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="list2DPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with a 2D list Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- list2DPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="listPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="mapModelTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert an map model" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="mapPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with a map Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="mapWithAnListOfBigDecimalTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="mapWithAnListOfBigDecimalTest" duration-ms="4" started-at="2016-12-28T17:20:13Z" description="types used by inner properties should be imported" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapWithAnListOfBigDecimalTest -->
        <test-method status="PASS" signature="mapWithListPropertyTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="mapWithListPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with a map with complex list Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapWithListPropertyTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="modelNameTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample_name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="modelNameTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample__name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="modelNameTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[\sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[_sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="secondCharUpperCaseNamesTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="secondCharUpperCaseNamesTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="convert a model with a 2nd char upper-case Property names" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondCharUpperCaseNamesTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="simpleModelTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a simple java model" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="squareBracketsTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="squareBracketsTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert query[password] to queryPassword" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- squareBracketsTest -->
        <test-method status="PASS" signature="upperCaseNamesTest()[pri:0, instance:io.swagger.codegen.java.JavaModelTest@e874448]" name="upperCaseNamesTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with upper-case Property names" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upperCaseNamesTest -->
      </class> <!-- io.swagger.codegen.java.JavaModelTest -->
      <class name="io.swagger.codegen.java.jaxrs.AllowableValuesTest">
        <test-method status="PASS" signature="annotationsTest(io.swagger.codegen.CodegenParameter, java.lang.String)[pri:0, instance:io.swagger.codegen.java.jaxrs.AllowableValuesTest@29b5cd00]" name="annotationsTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" data-provider="operations" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[null(null)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- annotationsTest -->
        <test-method status="PASS" signature="annotationsTest(io.swagger.codegen.CodegenParameter, java.lang.String)[pri:0, instance:io.swagger.codegen.java.jaxrs.AllowableValuesTest@29b5cd00]" name="annotationsTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" data-provider="operations" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[null(null)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[allowableValues="item1, item2, item3"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- annotationsTest -->
        <test-method status="PASS" signature="annotationsTest(io.swagger.codegen.CodegenParameter, java.lang.String)[pri:0, instance:io.swagger.codegen.java.jaxrs.AllowableValuesTest@29b5cd00]" name="annotationsTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" data-provider="operations" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[null(null)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[allowableValues="range=[1, infinity]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- annotationsTest -->
        <test-method status="PASS" signature="annotationsTest(io.swagger.codegen.CodegenParameter, java.lang.String)[pri:0, instance:io.swagger.codegen.java.jaxrs.AllowableValuesTest@29b5cd00]" name="annotationsTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" data-provider="operations" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[null(null)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[allowableValues="range=[1, 10]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- annotationsTest -->
        <test-method status="PASS" signature="annotationsTest(io.swagger.codegen.CodegenParameter, java.lang.String)[pri:0, instance:io.swagger.codegen.java.jaxrs.AllowableValuesTest@29b5cd00]" name="annotationsTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" data-provider="operations" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[null(null)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[allowableValues="range=[-infinity, 10]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- annotationsTest -->
      </class> <!-- io.swagger.codegen.java.jaxrs.AllowableValuesTest -->
      <class name="io.swagger.codegen.ignore.rules.FileRuleTest">
        <test-method status="PASS" signature="testMatchComplex()[pri:0, instance:io.swagger.codegen.ignore.rules.FileRuleTest@6b9651f3]" name="testMatchComplex" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchComplex -->
        <test-method status="PASS" signature="testNonMatchComplex()[pri:0, instance:io.swagger.codegen.ignore.rules.FileRuleTest@6b9651f3]" name="testNonMatchComplex" duration-ms="1" started-at="2016-12-28T17:20:12Z" finished-at="2016-12-28T17:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonMatchComplex -->
      </class> <!-- io.swagger.codegen.ignore.rules.FileRuleTest -->
      <class name="io.swagger.codegen.slim.SlimFrameworkServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.slim.SlimFrameworkServerOptionsTest@77ec78b9]" name="checkOptionsHelp" duration-ms="10" started-at="2016-12-28T17:20:19Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.slim.SlimFrameworkServerOptionsTest@77ec78b9]" name="checkOptionsProcessing" duration-ms="204" started-at="2016-12-28T17:20:19Z" finished-at="2016-12-28T17:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.slim.SlimFrameworkServerOptionsTest -->
      <class name="io.swagger.codegen.lumen.LumenServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.lumen.LumenServerOptionsTest@12cdcf4]" name="checkOptionsHelp" duration-ms="4" started-at="2016-12-28T17:20:14Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.lumen.LumenServerOptionsTest@12cdcf4]" name="checkOptionsProcessing" duration-ms="122" started-at="2016-12-28T17:20:14Z" finished-at="2016-12-28T17:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.lumen.LumenServerOptionsTest -->
      <class name="io.swagger.codegen.asyncscala.AsyncScalaClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.asyncscala.AsyncScalaClientOptionsTest@30a3107a]" name="checkOptionsHelp" duration-ms="9" started-at="2016-12-28T17:20:01Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.asyncscala.AsyncScalaClientOptionsTest@30a3107a]" name="checkOptionsProcessing" duration-ms="147" started-at="2016-12-28T17:20:01Z" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.asyncscala.AsyncScalaClientOptionsTest -->
      <class name="io.swagger.codegen.aspnet5.AspNet5ServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:io.swagger.codegen.aspnet5.AspNet5ServerOptionsTest@2bbf4b8b]" name="checkOptionsHelp" duration-ms="10" started-at="2016-12-28T17:20:01Z" description="check if all options described in documentation are presented in test case" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:io.swagger.codegen.aspnet5.AspNet5ServerOptionsTest@2bbf4b8b]" name="checkOptionsProcessing" duration-ms="202" started-at="2016-12-28T17:20:01Z" finished-at="2016-12-28T17:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- io.swagger.codegen.aspnet5.AspNet5ServerOptionsTest -->
      <class name="io.swagger.codegen.javascript.JavaScriptModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="arrayModelTest" duration-ms="2" started-at="2016-12-28T17:20:13Z" description="convert an array model" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="binaryDataTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="binaryDataTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with binary data" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- binaryDataTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="complexListPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with complex list Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="complexMapPropertyTest" duration-ms="2" started-at="2016-12-28T17:20:13Z" description="convert a model with complex map Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertiesTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="complexPropertiesTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with complex properties" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertiesTest -->
        <test-method status="PASS" signature="convertParameterTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="convertParameterTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a parameter" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertParameterTest -->
        <test-method status="PASS" signature="escapeNamesTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="escapeNamesTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="properly escape names per 567" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- escapeNamesTest -->
        <test-method status="PASS" signature="hyphensTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="hyphensTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="convert hyphens per issue 503" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hyphensTest -->
        <test-method status="PASS" signature="list2DPropertyTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="list2DPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with a 2D list Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- list2DPropertyTest -->
        <test-method status="PASS" signature="invalidParamNameTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="invalidParamNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="translate an invalid param name" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidParamNameTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="listPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with list Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="mapModelTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a map model" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="mapPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with a map Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="mapWithListPropertyTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="mapWithListPropertyTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with a map with complex list Property" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapWithListPropertyTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="modelNameTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample_name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample__name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[\sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="modelNameTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[_sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String, java.lang.String)[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="modelNameTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="avoid inner class" data-provider="modelNames" finished-at="2016-12-28T17:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="secondCharUpperCaseNamesTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="secondCharUpperCaseNamesTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with a 2nd char uppercase Property names" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondCharUpperCaseNamesTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="simpleModelTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="convert a simple java model" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="upperCaseNamesTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="upperCaseNamesTest" duration-ms="1" started-at="2016-12-28T17:20:13Z" description="convert a model with uppercase Property names" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upperCaseNamesTest -->
        <test-method status="PASS" signature="squareBracketsTest()[pri:0, instance:io.swagger.codegen.javascript.JavaScriptModelTest@42d8062c]" name="squareBracketsTest" duration-ms="0" started-at="2016-12-28T17:20:13Z" description="convert query[password] to queryPassword" finished-at="2016-12-28T17:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- squareBracketsTest -->
      </class> <!-- io.swagger.codegen.javascript.JavaScriptModelTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
